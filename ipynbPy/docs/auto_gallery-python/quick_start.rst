
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_gallery-python/quick_start.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_gallery-python_quick_start.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_gallery-python_quick_start.py:


SyntaxError
===========

Example script with invalid Python syntax

.. GENERATED FROM PYTHON SOURCE LINES 1-8

.. code-block:: Python

    """
    Quick start: atlasapprox in Python
    ===================

    This example demonstrates how to use the AtlasApprox API.

    """

.. GENERATED FROM PYTHON SOURCE LINES 9-14

The [*atlasapprox*](https://atlasapprox.readthedocs.io/en/latest/index.html) API provides access to approximated single-cell data across 28 species, including both animals and plants. You can explore data from species such as *Homo sapiens* (humans), *Mus musculus* (mice), *Arabidopsis thaliana* (thale cress), and *Zea mays* (corn). Follow this guide to get started with installation, basic usage, and example queries.

### **Create virtual environment**
%%
To ensure consistent dependencies, setting up a virtual environment is recommended before installing the package. Here's one way to do it:

.. GENERATED FROM PYTHON SOURCE LINES 14-17

.. code-block:: Python

    python -m venv myenv
    source myenv/bin/activate
    myenv\Scripts\activate 

.. GENERATED FROM PYTHON SOURCE LINES 18-20

**Installation**
Use *pip* to install the *atlasapprox* Python package:

.. GENERATED FROM PYTHON SOURCE LINES 20-21

.. code-block:: Python

    pip install atlasapprox

.. GENERATED FROM PYTHON SOURCE LINES 22-24

### **Initialize the API**
Import the *atlasapprox* Python package and create an API object:

.. GENERATED FROM PYTHON SOURCE LINES 24-26

.. code-block:: Python

    import atlasapprox
    api = atlasapprox.API()

.. GENERATED FROM PYTHON SOURCE LINES 27-33

## **Getting average gene expression**
The `average` function allows you to retrieve the average gene expression data for selected genes within an organism's specific organ.

The following example shows how to examine the average expression of five genes (*COL13A1*, *COL14A1*, *TGFBI*, *PDGFRA*, *GZMA*) in the human lung:
%%
Call API function with params

.. GENERATED FROM PYTHON SOURCE LINES 33-39

.. code-block:: Python

    avg_gene_expr_lung = api.average(
        organism = "h_sapiens", 
        organ = "lung", 
        features = ["COL13A1", "COL14A1", "TGFBI", "PDGFRA", "GZMA"], 
        measurement_type = "gene_expression"
    )

.. GENERATED FROM PYTHON SOURCE LINES 40-41

Display the result

.. GENERATED FROM PYTHON SOURCE LINES 41-42

.. code-block:: Python

    avg_gene_expr_lung

.. GENERATED FROM PYTHON SOURCE LINES 43-52

### **Output**
The function returns a *Pandas DataFrame* where:
* Each row represents a gene.  
* Each column corresponds to a cell type.
* The values indicate the average gene expression (measured in counts per ten thousand, or cptt).

## **Start from scratch**
If you're starting from scratch, the following steps will help you explore the API.
1. Ask about available organisms:

.. GENERATED FROM PYTHON SOURCE LINES 52-54

.. code-block:: Python

    organisms = api.organisms()
    print(organisms)

.. GENERATED FROM PYTHON SOURCE LINES 55-56

2. Ask about available organs within your organism of interest:

.. GENERATED FROM PYTHON SOURCE LINES 56-58

.. code-block:: Python

    organs = api.organs(organism="h_sapiens")
    print(organs)

.. GENERATED FROM PYTHON SOURCE LINES 59-60

3. Ask about available cell types within your organism and organ of interest:

.. GENERATED FROM PYTHON SOURCE LINES 60-63

.. code-block:: Python

    cell_types = api.celltypes(organism="h_sapiens", organ="lung", measurement_type = "gene_expression")
    print(cell_types)


.. GENERATED FROM PYTHON SOURCE LINES 64-77

## **More tutorials (coming soon)**
- average gene expression
- cell type abundance
- highest measurements by cell type across an organism
- marker genes
- gene coexpression
- gene homologs
- neighborhoods
- gene interaction partners
- ...

## **Conclusion**

This tutorial provided a quick start guide to use the *atlasapprox* Python package. For more detailed information, refer to the official [documentation](https://atlasapprox.readthedocs.io/en/latest/python/index.html). 


.. _sphx_glr_download_auto_gallery-python_quick_start.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: quick_start.ipynb <quick_start.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: quick_start.py <quick_start.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: quick_start.zip <quick_start.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
